{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGood","addGood","goods","setState","prevState","deleteGood","filter","item","this","length","slice","join","className","makeTitle","type","onClick","map","good","i","key","Math","random","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA2EaC,E,4MAvEbC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,aAAa,GAAD,mBAAMI,EAAUJ,cAAhB,CAA8BE,S,EAI9CG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,aAAa,YAAKI,EAAUJ,aAAaM,QAAO,SAAAC,GAAI,OAAIA,IAASL,W,+CAIrE,WACE,OAAQM,KAAKT,MAAMC,aAAaS,QAC9B,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUD,KAAKT,MAAMC,aAArB,gBACF,QACE,MAAM,GAAN,OAAUQ,KAAKT,MAAMC,aAAaU,MAAM,GAAI,GAAGC,KAAK,MAApD,yBACMH,KAAKT,MAAMC,aAAaU,OAAO,GADrC,oB,oBAKN,WAAU,IAAD,OACP,OACE,yBAAKE,UAAU,OACb,4BACGJ,KAAKK,aAER,4BACEC,KAAK,SACLC,QAAS,kBAAM,EAAKZ,SAAS,CAAEH,aAAc,OAF/C,SAMA,wBAAIY,UAAU,QACXf,EAAgBmB,KAAI,SAACC,EAAMC,GAAP,OACnB,wBACEC,IAAKC,KAAKC,OACVT,UACE,EAAKb,MAAMC,aAAasB,SAASL,GAC7B,WACA,eAGLA,EACD,4BACEH,KAAK,SACLC,QAAS,kBACP,EAAKhB,MAAMC,aAAasB,SAASL,GAC7B,EAAKZ,WAAWY,GAChB,EAAKhB,QAAQgB,KAGlB,EAAKlB,MAAMC,aAAasB,SAASL,GAC9B,SAAW,oB,GA7DbM,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.36f23b02.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  addGood = (goods) => {\n    this.setState(prevState => ({\n      selectedGood: [...prevState.selectedGood, goods],\n    }));\n  }\n\n  deleteGood = (goods) => {\n    this.setState(prevState => ({\n      selectedGood: [...prevState.selectedGood.filter(item => item !== goods)],\n    }));\n  }\n\n  makeTitle() {\n    switch (this.state.selectedGood.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${this.state.selectedGood} is selected`;\n      default:\n        return `${this.state.selectedGood.slice(0, -1).join(', ')}\n        and ${this.state.selectedGood.slice(-1)} are selected`;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.makeTitle()}\n        </h1>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ selectedGood: [] })}\n        >\n          Reset\n        </button>\n        <ul className=\"list\">\n          {goodsFromServer.map((good, i) => (\n            <li\n              key={Math.random}\n              className={\n                this.state.selectedGood.includes(good)\n                  ? 'selected'\n                  : 'notSelected'\n                }\n            >\n              {good}\n              <button\n                type=\"button\"\n                onClick={() => (\n                  this.state.selectedGood.includes(good)\n                    ? this.deleteGood(good)\n                    : this.addGood(good)\n                )}\n              >\n                {this.state.selectedGood.includes(good)\n                  ? 'Delete' : 'Select'\n                }\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}